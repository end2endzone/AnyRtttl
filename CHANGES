Changes for 2.5.0

* New feature: example `IoT-beeps` exploring device state feedback with RTTTL melodies.
* New feature: Support for playing RTTTL melodies on 2 speakers simultaneously.
* Fixed issue  #9 - Question - can we target two speakers ?
* Fixed issue #24 - Clarify default pin for RTTTL for all supported boards


Changes for 2.4.0

* Fixed issue #15 - Compilation fails with the ESP32 core version 3.x.
* Fixed issue #17 - Deprecate AppVeyor-based compilation pipeline.
* Fixed issue #18 - Deprecate x86_64 unit tests in favor of manual testing on actual hardware.


Changes for 2.3.1

* Fixed issue #10 - Fix ESP32Rtttl.ino example by @IgorCode.


Changes for 2.3.0

* New feature: Official support for ESP8266 and ESP32.
* Fixed issue #2 - Support for PROGMEM / FLASH melodies in non-blocking mode.
* Fixed issue #6 - Error compiling for board ESP32 Wrover Kit (all versions).


Changes for 2.2.1:

* Fixed issue #4: error compiling example code.
* Fixed issue #5: Refactor build process to use Arduino CLI instead of Arduino IDE.


Changes for 2.2.0:

* New feature: Build option `ANYRTTTL_BUILD_EXAMPLES` to enable/disable building AnyRtttl examples.
* New feature: Changed file/folder structure to be compatible with Arduino Library Manager.
* New feature: Using RapidAssist 0.5.0 and win32Arduino 2.3.1.


Changes for 2.1.229:

* New feature: Implemented support for RTTTL in Program Memory (PROGMEM).


Changes for 2.0.179:

* Library converted to AnyRtttl.
* First github release.
* Code originally release at http://www.end2endzone.com/anyrtttl-a-feature-rich-arduino-library-for-playing-rtttl-melodies/


Changes for 1.0.0:
* Initial release of NonBlockingRtttl.
